{"ast":null,"code":"var _jsxFileName = \"/home/gungorerhan/Dev/bluetooth-localization/ips frontend/src/components/UsertraceLines.js\";\nimport React from 'react'; // draw lines between two position\n\nconst UsertraceLines = ({\n  line_positions\n}) => {\n  const person_list = line_positions.map(line_position => {\n    var real_start_x = line_position.start_x / 5.25 * 38.7 + 3;\n    var real_start_y = line_position.start_y / 3.5 * 24.8 + 1.8;\n    var real_end_x = line_position.end_x / 5.25 * 38.7 + 3;\n    var real_end_y = line_position.end_y / 3.5 * 24.8 + 1.8;\n    var line_width = Math.sqrt(Math.pow(real_end_y - real_start_y, 2) + Math.pow(real_end_x - real_start_x, 2));\n    var line_height = 1.5;\n    var rotation_degreeZ = 0;\n    var rotation_degreeY = 0;\n\n    if (line_height > line_width) {\n      var temp = line_height;\n      line_height = line_width;\n      line_width = temp;\n      line_height = line_height + \"vw\";\n      line_width = line_width + \"vw\";\n      rotation_degreeZ = Math.atan((real_end_x - real_start_x) / (real_end_y - real_start_x));\n    } else {\n      line_height = line_height + \"vw\";\n      line_width = line_width + \"vw\";\n      rotation_degreeZ = Math.atan((real_end_y - real_start_y) / (real_end_x - real_start_x));\n    }\n\n    rotation_degreeZ = rotation_degreeZ * (180 / Math.PI);\n\n    if (real_end_y > real_start_y && real_end_x > real_start_x) {\n      real_start_x = real_start_x + 0.5;\n      rotation_degreeZ = rotation_degreeZ - 360;\n    } else if (real_end_y > real_start_y && real_end_x < real_start_x) {\n      rotation_degreeZ = -rotation_degreeZ;\n      rotation_degreeY = 180;\n    } else if (real_end_y < real_start_y && real_end_x < real_start_x) {\n      real_start_x = real_start_x + 0.5;\n      rotation_degreeZ = -rotation_degreeZ;\n      rotation_degreeY = 180;\n    }\n\n    var sty = {\n      width: line_width,\n      height: line_height,\n      marginTop: real_start_y + \"vw\",\n      marginLeft: real_start_x + \"vw\",\n      transform: `rotateY(${rotation_degreeY}deg) rotateZ(${rotation_degreeZ}deg)`\n    };\n    return React.createElement(\"div\", {\n      key: line_position.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"position_line\",\n      style: sty,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, person_list);\n};\n\nexport default UsertraceLines;","map":{"version":3,"sources":["/home/gungorerhan/Dev/bluetooth-localization/ips frontend/src/components/UsertraceLines.js"],"names":["React","UsertraceLines","line_positions","person_list","map","line_position","real_start_x","start_x","real_start_y","start_y","real_end_x","end_x","real_end_y","end_y","line_width","Math","sqrt","pow","line_height","rotation_degreeZ","rotation_degreeY","temp","atan","PI","sty","width","height","marginTop","marginLeft","transform","date"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\n// draw lines between two position\nconst UsertraceLines = ({line_positions}) => {\n    \n    const person_list = (\n        line_positions.map(line_position => {                        \n\n            var real_start_x = ((line_position.start_x / 5.25) * 38.7 ) + 3;\n            var real_start_y = ((line_position.start_y / 3.5) * 24.8) + 1.8;\n            var real_end_x = ((line_position.end_x / 5.25) * 38.7 ) + 3;\n            var real_end_y = ((line_position.end_y / 3.5) * 24.8) + 1.8;\n\n            var line_width = Math.sqrt( Math.pow(real_end_y - real_start_y, 2) + Math.pow(real_end_x - real_start_x,2));\n            var line_height = 1.5\n\n            var rotation_degreeZ = 0;\n            var rotation_degreeY = 0;\n\n            if (line_height > line_width){\n                var temp = line_height;\n                line_height = line_width;\n                line_width = temp;\n                line_height = line_height + \"vw\";\n                line_width = line_width + \"vw\";\n                rotation_degreeZ = Math.atan( (real_end_x-real_start_x) \n                                        / (real_end_y - real_start_x) );\n                 \n            }\n            else{\n                line_height = line_height + \"vw\";\n                line_width = line_width + \"vw\";\n                rotation_degreeZ = Math.atan( (real_end_y-real_start_y) \n                                        / (real_end_x - real_start_x) );    \n            }\n            rotation_degreeZ = rotation_degreeZ * (180/Math.PI);\n            \n            if ( real_end_y > real_start_y && real_end_x > real_start_x){\n                real_start_x = real_start_x + 0.5;\n                rotation_degreeZ = rotation_degreeZ - 360;\n            }\n            else if( real_end_y > real_start_y && real_end_x < real_start_x){\n                rotation_degreeZ =  -rotation_degreeZ;\n                rotation_degreeY = 180;\n            }\n            else if( real_end_y < real_start_y && real_end_x < real_start_x){\n                real_start_x = real_start_x + 0.5;\n                rotation_degreeZ = -rotation_degreeZ;\n                rotation_degreeY = 180;\n            }\n            \n\n\n            var sty = {\n                width: line_width,\n                height: line_height,\n                marginTop: real_start_y + \"vw\",\n                marginLeft: real_start_x + \"vw\",\n                transform: `rotateY(${rotation_degreeY}deg) rotateZ(${rotation_degreeZ}deg)`\n            };\n            \n            return (\n                <div key={line_position.date}>\n                    <div className=\"position_line\" style = {sty} ></div>\n                </div>\n            )\n        })\n    );\n    return(\n        <div>\n            {person_list}\n        </div>\n    )\n}\n\nexport default UsertraceLines"]},"metadata":{},"sourceType":"module"}