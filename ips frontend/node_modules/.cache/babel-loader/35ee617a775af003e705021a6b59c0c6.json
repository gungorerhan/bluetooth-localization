{"ast":null,"code":"var _jsxFileName = \"/home/gungorerhan/Dev/bluetooth-localization/ips frontend/src/components/Now.js\";\nimport React, { Component } from 'react';\n\nclass Now extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      current_date: \"\"\n    };\n\n    this.append_zero = number => {\n      if (number < 10) {\n        number = '0' + number;\n      }\n\n      return number;\n    };\n\n    this.convert_day = day => {\n      var the_day = '';\n\n      if (day === 1) {\n        the_day = 'Monday';\n      } else if (day === 2) {\n        the_day = 'Tuesday';\n      } else if (day === 3) {\n        the_day = 'Wednesday';\n      } else if (day === 4) {\n        the_day = 'Thursday';\n      } else if (day === 5) {\n        the_day = 'Friday';\n      } else if (day === 6) {\n        the_day = 'Saturday';\n      } else {\n        the_day = 'Sunday';\n      }\n\n      return the_day;\n    };\n\n    this.update_date = () => {\n      var today = new Date();\n      var date = this.append_zero(today.getDate()) + \"-\" + this.append_zero(today.getMonth() + 1) + \"-\" + today.getFullYear();\n      var day = this.convert_day(today.getDay());\n      var time = this.append_zero(today.getHours()) + \":\" + this.append_zero(today.getMinutes()) + \":\" + this.append_zero(today.getSeconds());\n      var dateTime = date + ' ' + day + ' ' + time;\n\n      try {\n        this.setState({\n          current_date: dateTime\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.update_date(), 1);\n  }\n\n  render() {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.state.current_date);\n  }\n\n}\n\nexport default Now;","map":{"version":3,"sources":["/home/gungorerhan/Dev/bluetooth-localization/ips frontend/src/components/Now.js"],"names":["React","Component","Now","state","current_date","append_zero","number","convert_day","day","the_day","update_date","today","Date","date","getDate","getMonth","getFullYear","getDay","time","getHours","getMinutes","getSeconds","dateTime","setState","error","console","componentDidMount","interval","setInterval","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA2B;AAAA;AAAA;AAAA,SACvBE,KADuB,GACf;AACJC,MAAAA,YAAY,EAAE;AADV,KADe;;AAAA,SAIvBC,WAJuB,GAIRC,MAAD,IAAY;AACtB,UAAIA,MAAM,GAAG,EAAb,EAAgB;AACZA,QAAAA,MAAM,GAAG,MAAMA,MAAf;AACH;;AACD,aAAOA,MAAP;AACH,KATsB;;AAAA,SAUvBC,WAVuB,GAURC,GAAD,IAAS;AACnB,UAAIC,OAAO,GAAG,EAAd;;AACA,UAAID,GAAG,KAAK,CAAZ,EAAc;AACVC,QAAAA,OAAO,GAAG,QAAV;AACH,OAFD,MAEO,IAAID,GAAG,KAAK,CAAZ,EAAc;AACjBC,QAAAA,OAAO,GAAG,SAAV;AACH,OAFM,MAEA,IAAID,GAAG,KAAK,CAAZ,EAAc;AACjBC,QAAAA,OAAO,GAAG,WAAV;AACH,OAFM,MAEA,IAAID,GAAG,KAAK,CAAZ,EAAc;AACjBC,QAAAA,OAAO,GAAG,UAAV;AACH,OAFM,MAEA,IAAID,GAAG,KAAK,CAAZ,EAAc;AACjBC,QAAAA,OAAO,GAAG,QAAV;AACH,OAFM,MAEA,IAAID,GAAG,KAAK,CAAZ,EAAc;AACjBC,QAAAA,OAAO,GAAG,UAAV;AACH,OAFM,MAEA;AACHA,QAAAA,OAAO,GAAG,QAAV;AACH;;AAED,aAAOA,OAAP;AACH,KA7BsB;;AAAA,SA8BvBC,WA9BuB,GA8BT,MAAM;AAChB,UAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,UAAIC,IAAI,GAAG,KAAKR,WAAL,CAAiBM,KAAK,CAACG,OAAN,EAAjB,IAAoC,GAApC,GAA0C,KAAKT,WAAL,CAAiBM,KAAK,CAACI,QAAN,KAAmB,CAApC,CAA1C,GAAmF,GAAnF,GAAyFJ,KAAK,CAACK,WAAN,EAApG;AACA,UAAIR,GAAG,GAAG,KAAKD,WAAL,CAAiBI,KAAK,CAACM,MAAN,EAAjB,CAAV;AACA,UAAIC,IAAI,GAAG,KAAKb,WAAL,CAAiBM,KAAK,CAACQ,QAAN,EAAjB,IAAqC,GAArC,GAA2C,KAAKd,WAAL,CAAiBM,KAAK,CAACS,UAAN,EAAjB,CAA3C,GAAkF,GAAlF,GAAwF,KAAKf,WAAL,CAAiBM,KAAK,CAACU,UAAN,EAAjB,CAAnG;AACA,UAAIC,QAAQ,GAAGT,IAAI,GAAC,GAAL,GAAWL,GAAX,GAAiB,GAAjB,GAAsBU,IAArC;;AACA,UAAG;AACC,aAAKK,QAAL,CAAc;AACVnB,UAAAA,YAAY,EAAEkB;AADJ,SAAd;AAGH,OAJD,CAKA,OAAME,KAAN,EAAY;AACRC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ,KA5CsB;AAAA;;AA6CvBE,EAAAA,iBAAiB,GAAG;AAAC,SAAKC,QAAL,GAAgBC,WAAW,CAAC,MAAM,KAAKlB,WAAL,EAAP,EAA0B,CAA1B,CAA3B;AAAwD;;AAC7EmB,EAAAA,MAAM,GAAE;AACJ,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAK1B,KAAL,CAAWC,YAAf,CADA;AAGH;;AAlDsB;;AAqD3B,eAAeF,GAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass Now extends Component{\n    state = {\n        current_date: \"\"\n    }\n    append_zero = (number) => {\n        if (number < 10){\n            number = '0' + number;\n        }\n        return number;\n    }\n    convert_day = (day) => {\n        var the_day = '';\n        if( day === 1){\n            the_day = 'Monday';\n        } else if( day === 2){\n            the_day = 'Tuesday';\n        } else if( day === 3){\n            the_day = 'Wednesday';\n        } else if( day === 4){\n            the_day = 'Thursday';\n        } else if( day === 5){\n            the_day = 'Friday';\n        } else if( day === 6){\n            the_day = 'Saturday';\n        } else {\n            the_day = 'Sunday';\n        }\n    \n        return the_day;\n    }\n    update_date = () => {\n        var today = new Date();\n        var date = this.append_zero(today.getDate()) + \"-\" + this.append_zero(today.getMonth() + 1) + \"-\" + today.getFullYear();\n        var day = this.convert_day(today.getDay());\n        var time = this.append_zero(today.getHours()) + \":\" + this.append_zero(today.getMinutes()) + \":\" + this.append_zero(today.getSeconds());\n        var dateTime = date+' ' + day + ' ' +time;\n        try{\n            this.setState({\n                current_date: dateTime\n            });\n        }\n        catch(error){\n            console.error(error);\n        }\n    }\n    componentDidMount() {this.interval = setInterval(() => this.update_date(),1)}\n    render(){\n        return(\n        <p>{this.state.current_date}</p>\n        );\n    }\n}\n\nexport default Now"]},"metadata":{},"sourceType":"module"}